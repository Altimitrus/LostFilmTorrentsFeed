<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LostFilmMonitoring.DAO</name>
    </assembly>
    <members>
        <member name="T:LostFilmMonitoring.DAO.DAO.BaseDAO">
            <summary>
            Common functionality for all DAOs.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.BaseDAO.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DAO.BaseDAO"/> class.
            </summary>
            <param name="connectionString">Database connection string.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.BaseDAO.OpenContext">
            <summary>
            Gets new database context.
            </summary>
            <returns>LostFilmDbContext.</returns>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DAO.FeedDAO">
            <summary>
            Provides functionality for managing user's feeds in storage.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.FeedDAO.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DAO.FeedDAO"/> class.
            </summary>
            <param name="connectionString">Database connection string.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.FeedDAO.LoadFeedRawAsync(System.Guid)">
            <summary>
            Loads users rss feed.
            </summary>
            <param name="userId">User Id.</param>
            <returns>Rss feed content.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.FeedDAO.DeleteAsync(System.Guid)">
            <summary>
            Delete users rss feed.
            </summary>
            <param name="userId">UserId.</param>
            <returns>Awaitable task.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.FeedDAO.LoadUserFeedAsync(System.Guid)">
            <summary>
            Loads user's rss feed in form of items.
            </summary>
            <param name="userId">UserId.</param>
            <returns>Set of FeedItems.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.FeedDAO.LoadBaseFeedAsync">
            <summary>
            Loads base rss feed.
            </summary>
            <returns>Set of FeedItems.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.FeedDAO.SaveUserFeedAsync(System.Guid,LostFilmMonitoring.DAO.DomainModels.FeedItem[])">
            <summary>
            Save user's feed.
            </summary>
            <param name="userId">UserId.</param>
            <param name="items">FeedItems to save.</param>
            <returns>Awaitable task.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.FeedDAO.SaveBaseFeedAsync(LostFilmMonitoring.DAO.DomainModels.FeedItem[])">
            <summary>
            Save base feed.
            </summary>
            <param name="items">FeedItems to save.</param>
            <returns>Awaitable task.</returns>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DAO.SeriesDAO">
            <summary>
            Provides functionality for managing series.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.SeriesDAO.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DAO.SeriesDAO"/> class.
            </summary>
            <param name="connectionString">Database connection string.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.SeriesDAO.LoadAsync(System.String)">
            <summary>
            Load series by name.
            </summary>
            <param name="name">Series name.</param>
            <returns>Series.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.SeriesDAO.LoadAsync">
            <summary>
            Load series.
            </summary>
            <returns>All series.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.SeriesDAO.SaveAsync(LostFilmMonitoring.DAO.DomainModels.Series)">
            <summary>
            Save series.
            </summary>
            <param name="series">Series to save.</param>
            <returns>Awaitable task.</returns>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DAO.SubscriptionDAO">
            <summary>
            Provides functionality for managing subscription in storage.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.SubscriptionDAO.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DAO.SubscriptionDAO"/> class.
            </summary>
            <param name="connectionString">Database connection string.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.SubscriptionDAO.LoadAsync(System.String,System.String)">
            <summary>
            Load subscriptions by series name and quality.
            </summary>
            <param name="seriesName">SeriesName.</param>
            <param name="quality">Quality.</param>
            <returns>Subscriptions.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.SubscriptionDAO.SaveAsync(System.Guid,LostFilmMonitoring.DAO.DomainModels.Subscription[])">
            <summary>
            Save subscription.
            </summary>
            <param name="userId">UserId.</param>
            <param name="subscriptions">Subscriptions.</param>
            <returns>Awaitable task.</returns>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DAO.TorrentFileDAO">
            <summary>
            Provides functionality for managing torrent files on disk.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.TorrentFileDAO.#ctor(System.String,LostFilmMonitoring.Common.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DAO.TorrentFileDAO"/> class.
            </summary>
            <param name="torrentFilesDirectoryPath">Physical path where torrent files are stored.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.TorrentFileDAO.SaveAsync(System.String,System.IO.Stream,System.Int32)">
            <summary>
            Save torrent file on disk.
            </summary>
            <param name="fileName">FileName.</param>
            <param name="fileContentStream">FileContentStream.</param>
            <param name="torrentId">TorrentId.</param>
            <returns>Awaitable task.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.TorrentFileDAO.TryFind(System.Int32)">
            <summary>
            Tries to find torrent file by torrent id.
            </summary>
            <param name="torrentId">Torrent id.</param>
            <returns>TorrentFile if it is found. Otherwise Null.</returns>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DAO.UserDAO">
            <summary>
            Provides functionality for managing users in storage.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.UserDAO.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DAO.UserDAO"/> class.
            </summary>
            <param name="connectionString">Database connection string.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.UserDAO.DeleteOldUsersAsync">
            <summary>
            Delete users which were not be active for 1 month.
            </summary>
            <returns>User Ids which were deleted.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.UserDAO.UpdateLastActivity(System.Guid)">
            <summary>
            Update user's last activity.
            </summary>
            <param name="userId">UserId.</param>
            <returns>True if user was found and updated. Otherwise false.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.UserDAO.LoadWithSubscriptionsAsync(System.Guid)">
            <summary>
            Load user with subscriptions.
            </summary>
            <param name="userId">UserId.</param>
            <returns>User with subscriptions preloaded.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.UserDAO.LoadAsync(System.Guid)">
            <summary>
            Load user.
            </summary>
            <param name="userId">UserId.</param>
            <returns>User.</returns>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DAO.UserDAO.CreateAsync(LostFilmMonitoring.DAO.DomainModels.User)">
            <summary>
            Create new user.
            </summary>
            <param name="user">User to create.</param>
            <returns>New user GUID.</returns>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DomainModels.Feed">
            <summary>
            Feed.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Feed.UserId">
            <summary>
            Gets or sets UserId.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Feed.Data">
            <summary>
            Gets or sets Data.
            </summary>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DomainModels.FeedItem">
            <summary>
            FeedItem.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DomainModels.FeedItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DomainModels.FeedItem"/> class.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DomainModels.FeedItem.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DomainModels.FeedItem"/> class.
            </summary>
            <param name="xElement">XElement.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DomainModels.FeedItem.#ctor(LostFilmTV.Client.Response.FeedItemResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DomainModels.FeedItem"/> class.
            </summary>
            <param name="item">FeedItemResponse.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DomainModels.FeedItem.#ctor(LostFilmTV.Client.Response.FeedItemResponse,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.DomainModels.FeedItem"/> class.
            </summary>
            <param name="item">FeedItemResponse.</param>
            <param name="link">Link.</param>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.FeedItem.PublishDate">
            <summary>
            Gets or sets PublishDate.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.FeedItem.Title">
            <summary>
            Gets or sets Title.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.FeedItem.Link">
            <summary>
            Gets or sets Link.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.FeedItem.PublishDateParsed">
            <summary>
            Gets or sets PublishDateParsed.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DomainModels.FeedItem.CompareTo(LostFilmMonitoring.DAO.DomainModels.FeedItem)">
            <inheritdoc/>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DomainModels.FeedItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DomainModels.FeedItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:LostFilmMonitoring.DAO.DomainModels.FeedItem.ToString">
            <inheritdoc/>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DomainModels.Series">
            <summary>
            Series.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Series.Name">
            <summary>
            Gets or sets Name.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Series.LastEpisode">
            <summary>
            Gets or sets LastEpisode Date.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Series.LastEpisodeName">
            <summary>
            Gets or sets Last episode name.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Series.LastEpisodeTorrentLinkSD">
            <summary>
            Gets or sets LastEpisodeTorrentLinkSD.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Series.LastEpisodeTorrentLinkMP4">
            <summary>
            Gets or sets LastEpisodeTorrentLinkMP4.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Series.LastEpisodeTorrentLink1080">
            <summary>
            Gets or sets LastEpisodeTorrentLink1080.
            </summary>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DomainModels.Subscription">
            <summary>
            Subscription.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Subscription.UserId">
            <summary>
            Gets or sets UserId.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Subscription.SeriesName">
            <summary>
            Gets or sets Series.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Subscription.Quality">
            <summary>
            Gets or sets Quantity.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.Subscription.User">
            <summary>
            Gets or sets User.
            </summary>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DomainModels.TorrentFile">
            <summary>
            TorrentFile.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.TorrentFile.FileName">
            <summary>
            Gets or sets FileName.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.TorrentFile.Stream">
            <summary>
            Gets or sets stream.
            </summary>
        </member>
        <member name="T:LostFilmMonitoring.DAO.DomainModels.User">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.User.Id">
            <summary>
            Gets or sets Id.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.User.Cookie">
            <summary>
            Gets or sets LostFilmCookie.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.User.Usess">
            <summary>
            Gets or sets Usess.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.User.Uid">
            <summary>
            Gets or sets Uid.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.User.LastActivity">
            <summary>
            Gets or sets LastActivity.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.DomainModels.User.Subscriptions">
            <summary>
            Gets or sets Subscriptions.
            </summary>
        </member>
        <member name="T:LostFilmMonitoring.DAO.LostFilmDbContext">
            <summary>
            Database context.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.LostFilmDbContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.LostFilmDbContext"/> class.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.LostFilmDbContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LostFilmMonitoring.DAO.LostFilmDbContext"/> class.
            </summary>
            <param name="connectionString">Database connection string.</param>
        </member>
        <member name="P:LostFilmMonitoring.DAO.LostFilmDbContext.Feeds">
            <summary>
            Gets or sets Feeds.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.LostFilmDbContext.Users">
            <summary>
            Gets or sets Users.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.LostFilmDbContext.Series">
            <summary>
            Gets or sets Series.
            </summary>
        </member>
        <member name="P:LostFilmMonitoring.DAO.LostFilmDbContext.Subscriptions">
            <summary>
            Gets or sets Subscriptions.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.LostFilmDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:LostFilmMonitoring.DAO.LostFilmDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:LostFilmMonitoring.DAO.Migrations.Init">
            <summary>
            Migration.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.Migrations.Init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            Up migration.
            </summary>
            <param name="migrationBuilder">MigrationBuilder.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.Migrations.Init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            Down migration.
            </summary>
            <param name="migrationBuilder">MigrationBuilder.</param>
        </member>
        <member name="T:LostFilmMonitoring.DAO.Migrations.movefeedsindb">
            <summary>
            Migration.
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.Migrations.movefeedsindb.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            Up migration.
            </summary>
            <param name="migrationBuilder">MigrationBuilder.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.Migrations.movefeedsindb.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            Down migration.
            </summary>
            <param name="migrationBuilder">MigrationBuilder.</param>
        </member>
        <member name="T:LostFilmMonitoring.DAO.Migrations.Refactoring">
            <summary>
            Refactoring
            </summary>
        </member>
        <member name="M:LostFilmMonitoring.DAO.Migrations.Refactoring.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            Up migration.
            </summary>
            <param name="migrationBuilder">MigrationBuilder.</param>
        </member>
        <member name="M:LostFilmMonitoring.DAO.Migrations.Refactoring.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            Down migration.
            </summary>
            <param name="migrationBuilder">MigrationBuilder.</param>
        </member>
    </members>
</doc>
